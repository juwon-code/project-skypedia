# Application settings
spring:
  application:
    name: skypedia
  jackson:
    time-zone: Asia/Seoul

# DB settings
  jpa:
    open-in-view: ${JPA_OPEN_IN_VIEW}
    show-sql: ${JPA_SHOW_SQL}
    hibernate:
      ddl-auto: none
    defer-datasource-initialization: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 50
  sql:
    init:
      mode: never
  flyway:
    enabled: true
    locations:
      - classpath:/db/migration/base
      - classpath:/db/migration/prod
    baseline-on-migrate: true

  # DB Connection settings
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRESQL_URL}
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  data:
    redis:
      repositories:
        enabled: false

# Google Cloud Storage settings
  cloud:
    gcp:
      storage:
        project-id: ${GCS_PROJECT_ID}
        bucket-name: ${GCS_BUCKET_NAME}
        credentials:
          location: classpath:gcs-credentials.json

# OAuth2 settings
  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REGISTRATION_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REGISTRATION_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REGISTRATION_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# Elasticsearch settings
  elasticsearch:
    uris:
      - ${ELASTIC_URI}

# Actuator settings
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

# Google Map API settings
google:
  map:
    api:
      uri: https://maps.googleapis.com/maps/api/geocode/json
      key: ${GOOGLE_MAP_API_KEY}

# Jwt constants
jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  access-token:
    expiration: 900000
  refresh-token:
    expiration: 604800000

# Redis key constants
constant:
  redis:
    prefix:
      refresh-token: "refresh_token:"
      notify-message:
        on-user: "notify_message:on-user"
        on-global: "notify_message:on-global"
      sse:
        emitter: "sse_emitter:"
        event: "sse_event:"
      post: "post:"
      plan-post: "plan_post:"
      reply: "reply:"
    suffix:
      likes:
        add: ":likes:add"
        del: ":likes:del"
      views: ":views"
      scrap:
        add: ":scrap:add"
        del: ":scrap:del"

# URI constants
client-uri: ${CLIENT_URI}
security-endpoints:
  public-uri:
    - "/api/v1/auth/**"
    - "/health"
    - "/docs/**"
  user-uri:
    - "/api/v1/member"
  admin-uri:
    - "/api/v1/admin/member/**"

# Other constants
refresh-token:
  key: "Bearer "