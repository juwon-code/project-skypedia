# Application settings
spring.application.name=skypedia
spring.jackson.time-zone=Asia/Seoul

# JPA settings
spring.jpa.open-in-view=${JPA_OPEN_IN_VIEW}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8

# DB connection settings
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${MYSQL_URL}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

# Redis connection settings
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.username=
spring.redis.password=${REDIS_PASSWORD}
spring.data.redis.repositories.enabled=false

# Google Map API settings
google.map.api.uri=https://maps.googleapis.com/maps/api/geocode/json
google.map.api.key=${GOOGLE_MAP_API_KEY}

# Google Cloud Storage settings
spring.cloud.gcp.storage.project-id=${GCS_PROJECT_ID}
spring.cloud.gcp.storage.bucket-name={GCS_BUCKET_NAME}
spring.cloud.gcp.storage.credentials.location=classpath:gcs-credentials.json

# Naver Oauth2 settings
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REGISTRATION_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Google Oauth2 settings
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REGISTRATION_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

# JWT constants
jwt.secret.key=${JWT_SECRET_KEY}
jwt.access-token.valid-in-seconds=3600
jwt.refresh-token.valid-in-seconds=60000

# Other constants
frontend.uri=${FRONTEND_URI}
backend.uri=${BACKEND_URI}

# Redis key prefix constants
post.views.key=post:views:
post.likes.add.key=post:likes:add:
post.likes.del.key=post:likes:del:
post.scrap.add.key=post:scrap:add:
post.scrap.del.key=post:scrap:del:
reply.likes.add.key=reply:likes:add:
reply.likes.del.key=reply:likes:del:
plan-group.views.key=plan-group:views:
plan-group.likes.add.key=plan-group:likes:add:
plan-group.likes.del.key=plan-group:likes:del:
plan-group.scrap.add.key=plan-group:scrap:add:
plan-group.scrap.del.key=plan-group:scrap:del:
notify-on-user.key=notify-on-user.key:
notify-on-global.key=notify-on-global.key:
sse-emitter.key=sse-emitter.key:
sse-event.key=sse-event.key: