version: '3.8'

services:
  # Nginx proxy server
  nginx:
    image: nginx:1.27.3-alpine
    container_name: proxy-server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - app-server
      - certbot
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - public-net

  # certbot
  certbot:
    image: certbot/certbot:v1.7.0
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done'"
    networks:
      - public-net

  # Application server
  app:
    image: ${DOCKER_IMAGE_PATH}:latest
    container_name: app-server
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mysql-db
      - redis-db
    volumes:
      - ./logs:/logs
    networks:
      - internal-net

  # Redis DB
  redis:
    image: redis:7.4.2-alpine
    container_name: redis-db
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${IMDB_PASSWORD}
    command: ["redis-server", "--requirepass", "${IMDB_PASSWORD}"]
    networks:
      - internal-net

  # Mysql DB
  mysql:
    image: mysql:8.0.39
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      TZ: Asia/Seoul
      MYSQL_DATABASE: ${RDB_SCHEMA_NAME}
      MYSQL_ROOT_PASSWORD: ${RDB_ROOT_PASSWORD}
      MYSQL_USER: ${RDB_USERNAME}
      MYSQL_PASSWORD: ${RDB_PASSWORD}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - internal-net

networks:
  public-net:
    driver: bridge
  internal-net:
    internal: true